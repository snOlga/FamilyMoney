<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
			 xmlns:views="clr-namespace:FamilyMoney.Views"
			 xmlns:vm="using:FamilyMoney.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
			 x:DataType="vm:AccountsViewModel"
             x:Class="FamilyMoney.Views.AccountsView"
			 >
	<UserControl.Styles>
		<Style Selector="Border.Separator">
			<Setter Property="Height" Value="3" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Background" Value="{DynamicResource SystemAltMediumLowColor}" />
		</Style>
		<Style Selector="Border.Account">
			<Setter Property="Height" Value="50" />
		</Style>
		<Style Selector="Border.Drag">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="CornerRadius" Value="3" />
			<Setter Property="Width" Value="300" />
			<Setter Property="Opacity" Value="0.6" />
		</Style>
		<Style Selector="Border.Group">
			<Setter Property="Margin" Value="1 0 1 0" />
			<Setter Property="Background" Value="{DynamicResource SystemRegionBrush}" />
		</Style>
		<Style Selector="Border.Element">
			<Setter Property="Margin" Value="1 0 1 0" />
			<Setter Property="BorderThickness" Value="1 1 1 0" />
			<Setter Property="BorderBrush" Value="{DynamicResource SystemRegionBrush}" />
			<Setter Property="Background" Value="{DynamicResource SystemAltMediumLowColor}" />
		</Style>
		<Style Selector="Border.Account:pointerover">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
		</Style>
		<Style Selector="Border.Account Image">
			<Setter Property="Height" Value="40" />
			<Setter Property="Width" Value="40" />
			<Setter Property="Margin" Value="10 5 0 5" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Border.Account TextBlock#AccountName">
			<Setter Property="Margin" Value="20 5 0 5" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Border.Account TextBlock#AccountName2">
			<Setter Property="Margin" Value="20 5 0 5" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Border.Account TextBlock#AccountAmount">
			<Setter Property="Margin" Value="0 0 10 0" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Right" />
		</Style>		
		<Style Selector="Border.Account.selected">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
		</Style>
		<Style Selector="PathIcon">
			<Setter Property="Height" Value="11"/>
		</Style>
	</UserControl.Styles>
	
	<StackPanel Name="MainContainer" DragDrop.AllowDrop="True" Orientation="Vertical">
		<StackPanel Orientation="Horizontal" Margin="0 0 0 4" Height="47">
			<Button Command="{Binding AddGroupCommand}">
				<PathIcon Data="{StaticResource Tree}" />
			</Button>
			<Button Command="{Binding AddElementCommand}">
				<PathIcon Data="{StaticResource Rectangles}" />
			</Button>
			<Button Command="{Binding EditCommand}">
				<PathIcon Data="{StaticResource Edit}" />
			</Button>
			<Button Command="{Binding DeleteCommand}">
				<PathIcon Data="{StaticResource Cross}" />
			</Button>
		</StackPanel>
		<Border Classes="Separator"></Border>
		<Border Classes="Account Group" 
				Classes.selected="{Binding IsSelected}"
				DataContext="{Binding Total}"
				>
			<i:Interaction.Behaviors>
				<ia:EventTriggerBehavior EventName="Tapped">
					<InvokeCommandAction Command="{Binding SelectCommand}" 
										 CommandParameter="{Binding $parent[UserControl].DataContext}"/>
				</ia:EventTriggerBehavior>
			</i:Interaction.Behaviors>
			
			<Grid ColumnDefinitions="* auto">
				<StackPanel Orientation="Horizontal">
					<Image Stretch="Uniform"
							Source="{Binding Image}"
							IsVisible="{Binding Image, Converter={x:Static ObjectConverters.IsNotNull}}"
							/>
					<TextBlock Text="{Binding Name}" Name="AccountName"/>
				</StackPanel>
				<TextBlock Grid.Column="1" Text="{Binding Amount, StringFormat=\{0:0.00\}}" Name="AccountAmount"/>
			</Grid>
		</Border>
		<Border Classes="Separator"></Border>

		<ItemsControl ItemsSource="{Binding Total.Children}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>

			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<StackPanel Orientation="Vertical">
						<Border Classes="Account" 
								Classes.Element="{Binding !IsGroup}" 
								Classes.Group="{Binding IsGroup}" 
								Classes.selected="{Binding IsSelected}"
								>
							<i:Interaction.Behaviors>
								<ia:EventTriggerBehavior EventName="Tapped">
									<InvokeCommandAction Command="{Binding SelectCommand}" 
														 CommandParameter="{Binding $parent[UserControl].DataContext}"/>
								</ia:EventTriggerBehavior>
								<ia:EventTriggerBehavior EventName="DoubleTapped">
									<InvokeCommandAction Command="{Binding $parent[UserControl].((vm:AccountsViewModel)DataContext).EditCommand}"/>
								</ia:EventTriggerBehavior>
							</i:Interaction.Behaviors>

							<Grid ColumnDefinitions="auto * auto">
								<PathIcon PointerPressed="OnPointerPressed" Data="{StaticResource ThreeDots}" />
								<StackPanel Grid.Column="1" Orientation="Horizontal">
									<Image Stretch="Uniform"
											Source="{Binding Image}"
											IsVisible="{Binding Image, Converter={x:Static ObjectConverters.IsNotNull}}"
											/>
									<TextBlock Text="{Binding Name}" Name="AccountName"/>
								</StackPanel>
								<TextBlock Grid.Column="2" Text="{Binding Amount, StringFormat=\{0:0.00\}}" Name="AccountAmount"/>
							</Grid>
						</Border>
						<ItemsControl ItemsSource="{Binding Children}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Border Classes="Account Element" Classes.selected="{Binding IsSelected}">
										<i:Interaction.Behaviors>
											<ia:EventTriggerBehavior EventName="Tapped">
												<InvokeCommandAction Command="{Binding SelectCommand}"
																	 CommandParameter="{Binding $parent[UserControl].DataContext}"/>
											</ia:EventTriggerBehavior>
											<ia:EventTriggerBehavior EventName="DoubleTapped">
												<InvokeCommandAction Command="{Binding $parent[UserControl].((vm:AccountsViewModel)DataContext).EditCommand}"/>
											</ia:EventTriggerBehavior>
										</i:Interaction.Behaviors>

										<Grid ColumnDefinitions="auto * auto">
											<PathIcon PointerPressed="OnPointerPressed" Data="{StaticResource ThreeDots}" />
											<StackPanel Grid.Column="1" Orientation="Horizontal">
												<Image Stretch="Uniform"
													   Source="{Binding Image}"
													   IsVisible="{Binding Image, Converter={x:Static ObjectConverters.IsNotNull}}"
													/>
												<TextBlock Text="{Binding Name}" Name="AccountName" />
											</StackPanel>
											<TextBlock Grid.Column="2" Text="{Binding Amount, StringFormat=\{0:0.00\}}" Name="AccountAmount"/>
										</Grid>
									</Border>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>

		<Border Classes="Account Drag" Name="GhostItem">
			<StackPanel Orientation="Horizontal">
				<Image Stretch="Uniform"
						Source="{Binding DraggingAccount.Image}"
						IsVisible="{Binding DraggingAccount.Image, Converter={x:Static ObjectConverters.IsNotNull}}"
												/>
				<TextBlock Text="{Binding DraggingAccount.Name}" Name="AccountName2" />
			</StackPanel>
		</Border>

	</StackPanel>

</UserControl>
