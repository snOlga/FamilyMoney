<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:FamilyMoney.ViewModels"
		xmlns:cv="using:FamilyMoney.Converters"
		xmlns:views="clr-namespace:FamilyMoney.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
		xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        x:Class="FamilyMoney.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/wallet.ico"
		WindowState="Maximized"
        Title="Семейные деньги">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainWindowViewModel/>
	</Design.DataContext>
	<Window.Resources>
		<cv:GridLengthConverter x:Key="gridLengthConverter" />
	</Window.Resources>
	<Window.Styles>
		<Style Selector="StackPanel.SideBarMenu">
			<Setter Property="Orientation" Value="Vertical"/>
			<Setter Property="Margin" Value="0" />
		</Style>
		<Style Selector="Border.SideBarMenuItem">
			<Setter Property="Background" Value="{DynamicResource SystemAltMediumLowColor}" />
		</Style>
		<Style Selector="Border.SideBarMenuItem StackPanel">
			<Setter Property="Orientation" Value="Horizontal"/>
			<Setter Property="Spacing" Value="17"/>
			<Setter Property="Margin" Value="15 10" />
		</Style>
		<Style Selector="Border.SideBarMenuItem:pointerover">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
		</Style>
		<Style Selector="Border.SideBarMenuItem PathIcon">
			<Setter Property="Width" Value="14"/>
		</Style>
	</Window.Styles>

	<SplitView IsPaneOpen="{Binding IsPaneOpen}"
		   CompactPaneLength="45"
		   DisplayMode="CompactInline"
		   OpenPaneLength="300"
		   Background="{DynamicResource SystemAltMediumLowColor}"
		   PaneBackground="{DynamicResource SystemAltMediumLowColor}">
		<SplitView.Pane>
			<StackPanel Orientation="Vertical"
						Spacing="5"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top">
				<Button HorizontalAlignment="Left"
						Width="32"
						Height="32"
						Margin="7 12"
						Background="Transparent"
						Command="{Binding TriggerPaneCommand}">
					<PathIcon Height="11" Data="{StaticResource LineHorizontal3Regular}" />
				</Button>

				<StackPanel Classes="SideBarMenu">
					<Border Classes="SideBarMenuItem">
						<StackPanel>
							<PathIcon Data="{StaticResource HomeRegular}" />
							<TextBlock Text="Главная" />
						</StackPanel>
					</Border>

					<Border Classes="SideBarMenuItem">
						<StackPanel>
							<PathIcon Data="{StaticResource Categories}" />
							<TextBlock Text="Категории" />
						</StackPanel>
					</Border>

					<Border Classes="SideBarMenuItem" Name="ImportButton">
						<StackPanel>
							<PathIcon Data="{StaticResource Import}" />
							<TextBlock Text="Импорт" />
						</StackPanel>
						
						<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="Tapped">
								<InvokeCommandAction Command="{Binding ImportCommand}"
													 CommandParameter="{Binding #ImportButton}"/>
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Border>
				</StackPanel>
			</StackPanel>
		</SplitView.Pane>

		<SplitView.Content>
			<Border Classes="LeftTop" Background="{DynamicResource SystemAltMediumLowColor}">
				<Grid RowDefinitions="50 *">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{Binding LeftSideWidth, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}" />
						<ColumnDefinition Width="4" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<StackPanel Orientation="Horizontal" Grid.Column="2"
								Margin="10 0 0 0"
								>
						<Button Command="{Binding Transactions.AddDebetCommand}">Доход</Button>
						<Button Command="{Binding Transactions.AddCreditCommand}">Расход</Button>
						<Button Command="{Binding Transactions.AddTransferCommand}">Перевод</Button>

						<views:PeriodView DataContext="{Binding Period}"
										  Margin="10 0 0 0"
										  />
					</StackPanel>


					<views:AccountsView Grid.RowSpan="2" DataContext="{Binding Accounts}" />

					<GridSplitter Grid.Column="1" Grid.Row="1" ResizeDirection="Columns"/>

					<views:TransactionsView Grid.Column="2"
											Grid.Row="1"
											DataContext="{Binding Transactions}"
											/>
				</Grid>
			</Border>
		</SplitView.Content>
	</SplitView>
</Window>
